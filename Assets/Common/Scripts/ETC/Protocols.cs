using System;
using System.Runtime.InteropServices;

//-----------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
//------------------------------------[TCP]------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
enum enTCPProtocol
{
	TCP_PROTOCOL_START = -1,
	prCRYPT,
	prZIP,

	prConnectAck,
	prHeroInfoReq,
	prMapUserInfoAck,           // 방안에 들어가면 다른 유저 정보를 받아옵니다.
	prLoadEndReq,
	prInHeroInfoAck,            // 다른 유저가 방안에 들어오면 그 유저 정보를 받음(나는 들어오지 않아요)
	prOutHeroInfoAck,           // 방안에 서 나갔을때 받음
	prDieReq, prDieAck,                 // prDieReq :내가죽었을때

	prAllCellInfoAck,           // 먹이셀 정보 받기(사용안해요)
	prAllItemInfoAck,           // 아이템 정보 받기

	prItemRezenAck,             // 아이템 리젠 정보 받기

	prEatItemReq, prEatItemAck,                 // 아이템 먹었을때 처리 

	prCellRezenAck,             // 먹이셀, 랜드마인셀등 리소폰 정보
	prEatCellReq, prEatCellAck,             // 먹이셀 먹었을때 주고/받기

	prCreateBulletCellReq, prCreateBulletCellAck,       // 총알셀 생성

	prEatLandMineCellReq, prEatLandMineCellAck,     // 지뢰가 먹이셀 먹었을때 패킷 주고/받기
	prLandMineSplitAck,         // 10번째 지뢰셀 맞춘 셀 패킷
	prLandMineBulletCellReq, prLandMineBulletCellAck,    // 지뢰셀 총알 만들기 패킷 주고/받기

	prCageStartAck,             // 줄어 들기 시작
	prCageEndAck,               // 끝난거

	// [8_19 규덕추가]
	prCollLandMineCellReq,      //
	prCollLandMineCellAck,      //

	TCP_PROTOCOL_END,
};

//-----------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
//------------------------------------[UDP]------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------//
enum enUDPProtocol
{
	udpCryp = -100,

	UDP_PROTOCOL_START = 0,

	/// <summary>
	/// 홀 펀칭 패킷
	/// </summary>
	udpStartReq, udpStartAck,


	/// <summary>
	/// 포트 업데이트용 패킷
	/// </summary>
	udpUpdatePort,

	UDP_PROTOCOL_END,
};

/// <summary> 
/// UDP헤더 
/// </summary> 
[Serializable]
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi, Pack = 4)]
public struct stUDPHeader
{
	/// <summary> 
	/// 패킷 순서 구분 변수 
	/// </summary> 
	[MarshalAs(UnmanagedType.I4)]
	public int iCount;

	[MarshalAs(UnmanagedType.I4)]
	public int iID;

	[MarshalAs(UnmanagedType.I4)]
	public int iLength;

	/// <summary> 
	/// iCount+iLength+iID 
	/// </summary> 
	[MarshalAs(UnmanagedType.I4)]
	public int iCheckSum;

	/// <summary> 
	/// 자신의 고유 아이디 
	/// </summary> 
	[MarshalAs(UnmanagedType.I4)]
	public int UID;

	/// <summary> 
	/// 0 : 나 빼고 다보냄 
	/// -100 : 나 포함 다보냄 
	/// </summary> 
	[MarshalAs(UnmanagedType.I4)]
	public int TID;

	[MarshalAs(UnmanagedType.I4)]
	public int nKey;


	public stUDPHeader(int iCount = 0, int nID = 0, int iLength = 0, int icheckSum = 0, int UID = 0, int TID = 0, int nKey = 0)
	{
		this.iCount = this.iID = this.iLength = this.iCheckSum = 0;
		this.UID = 0;
		this.TID = 0;
		this.nKey = 0;
	}

	public void SetHeader(int id, int len, int tid = 0)
	{
		iCount = 0;
		iID = id;
		iLength = len;
		iCheckSum = iCount + iID + iLength;
		UID = 0;
		TID = tid;

		nKey = 0;
	}
};
